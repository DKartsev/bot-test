import Fastify from 'fastify';
import { Telegraf } from 'telegraf';
import { createClient } from '@supabase/supabase-js';

const BOT_TOKEN = process.env.BOT_TOKEN!;
const SUPABASE_URL = process.env.SUPABASE_URL!;
const SUPABASE_KEY = process.env.SUPABASE_KEY!;

const bot = new Telegraf(BOT_TOKEN);
const fastify = Fastify();
const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

// –•–µ–Ω–¥–ª–µ—Ä —Ç–µ–∫—Å—Ç–∞
bot.on('text', async (ctx) => {
  const userId = ctx.from.id.toString();
  const text = ctx.message.text;

  // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  await supabase.from('messages').insert({
    conversation_id: await getOrCreateConversation(userId),
    sender: 'user',
    content: text
  });

  // –∑–∞–≥–ª—É—à–∫–∞ (–≤ –±—É–¥—É—â–µ–º RAG)
  await ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –°–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏–ª–∏ —è –æ—Ç–≤–µ—á—É —Å–∞–º üôå');
});

// Telegram webhook
fastify.post('/bot', async (req, res) => {
  await bot.handleUpdate(req.body);
  res.send({ status: 'ok' });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
fastify.listen({ port: 3000 }, () => {
  console.log('Server running on http://localhost:3000');
});

// –•–µ–ª–ø–µ—Ä: –ø–æ–ª—É—á–∏—Ç—å/—Å–æ–∑–¥–∞—Ç—å –¥–∏–∞–ª–æ–≥
async function getOrCreateConversation(user_telegram_id: string): Promise<string> {
  const { data, error } = await supabase
    .from('conversations')
    .select('id')
    .eq('user_telegram_id', user_telegram_id)
    .eq('status', 'open')
    .limit(1)
    .maybeSingle();

  if (data) return data.id;

  const { data: created } = await supabase
    .from('conversations')
    .insert({ user_telegram_id })
    .select()
    .single();

  return created.id;
}
