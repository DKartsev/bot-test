// –¢–µ—Å—Ç –±–æ—Ç–∞ –≤ polling —Ä–µ–∂–∏–º–µ
const TelegramBot = require('node-telegram-bot-api');

require('dotenv').config();

async function testPollingBot() {
  console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –≤ polling —Ä–µ–∂–∏–º–µ...\n');

  const botToken = process.env.TG_BOT_TOKEN;
  
  if (!botToken) {
    console.log('‚ùå TG_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    return;
  }

  console.log('‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω');
  console.log('üì° –†–µ–∂–∏–º: polling');

  try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å polling
    const bot = new TelegramBot(botToken, { polling: true });
    console.log('‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ polling —Ä–µ–∂–∏–º–µ');

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await bot.getMe();
    console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:');
    console.log(`   –ò–º—è: ${botInfo.first_name}`);
    console.log(`   Username: @${botInfo.username}`);
    console.log(`   ID: ${botInfo.id}`);

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    bot.on('message', (msg) => {
      console.log('üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', {
        chatId: msg.chat.id,
        userId: msg.from?.id,
        text: msg.text?.substring(0, 50),
        timestamp: new Date().toISOString()
      });

      // –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
      if (msg.text) {
        bot.sendMessage(msg.chat.id, `–ü–æ–ª—É—á–µ–Ω–æ: ${msg.text}`);
      }
    });

    bot.on('callback_query', (query) => {
      console.log('üîò –ü–æ–ª—É—á–µ–Ω callback query:', {
        chatId: query.message?.chat.id,
        userId: query.from.id,
        data: query.data,
        timestamp: new Date().toISOString()
      });

      // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
      bot.answerCallbackQuery(query.id, { text: 'Callback –æ–±—Ä–∞–±–æ—Ç–∞–Ω!' });
    });

    bot.on('polling_error', (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ polling:', error);
    });

    console.log('\n‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ polling —Ä–µ–∂–∏–º–µ!');
    console.log('üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    console.log('‚èπÔ∏è –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\n');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    process.on('SIGINT', () => {
      console.log('\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞...');
      bot.stopPolling();
      process.exit(0);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞:', error.message);
  }
}

testPollingBot().catch(console.error);
