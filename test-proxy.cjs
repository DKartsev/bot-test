// –¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏ –¥–ª—è OpenAI
const { HttpsProxyAgent } = require('https-proxy-agent');
const fetch = require('node-fetch');

require('dotenv').config();

async function testProxy() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏...\n');

  const OPENAI_API_KEY = process.env.OPENAI_API_KEY;
  const OPENAI_PROXY_URL = process.env.OPENAI_PROXY_URL || 'http://aUGIll6zoH:KFu2uvbHBx@193.233.115.178:11403';

  console.log('–ü—Ä–æ–∫—Å–∏ URL:', OPENAI_PROXY_URL);
  console.log('OpenAI API Key:', OPENAI_API_KEY ? '–Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');

  try {
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∫—Å–∏ –∞–≥–µ–Ω—Ç
    const proxyAgent = new HttpsProxyAgent(OPENAI_PROXY_URL);
    console.log('‚úÖ –ü—Ä–æ–∫—Å–∏ –∞–≥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω');

    // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∫ OpenAI
    console.log('\nüì° –¢–µ—Å—Ç 1: –ó–∞–ø—Ä–æ—Å –∫ OpenAI API...');
    const response = await fetch('https://api.openai.com/v1/models', {
      headers: {
        'Authorization': `Bearer ${OPENAI_API_KEY}`,
      },
      agent: proxyAgent,
      timeout: 10000, // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
    });

    console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
    console.log('–ó–∞–≥–æ–ª–æ–≤–∫–∏:', Object.fromEntries(response.headers.entries()));

    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ OpenAI API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
      console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–µ–π:', data.data?.length || 0);
    } else {
      const errorText = await response.text();
      console.log('‚ùå –û—à–∏–±–∫–∞ OpenAI API:', response.status, errorText);
    }

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
    console.log('–¢–∏–ø –æ—à–∏–±–∫–∏:', error.constructor.name);
    
    if (error.code) {
      console.log('–ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code);
    }
  }

  // –¢–µ—Å—Ç 2: –ë–µ–∑ –ø—Ä–æ–∫—Å–∏
  console.log('\nüì° –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å –±–µ–∑ –ø—Ä–æ–∫—Å–∏...');
  try {
    const response = await fetch('https://api.openai.com/v1/models', {
      headers: {
        'Authorization': `Bearer ${OPENAI_API_KEY}`,
      },
      timeout: 10000,
    });

    console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ (–±–µ–∑ –ø—Ä–æ–∫—Å–∏):', response.status);
    
    if (response.ok) {
      console.log('‚úÖ OpenAI API –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ –ø—Ä–æ–∫—Å–∏');
    } else {
      console.log('‚ùå OpenAI API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ –ø—Ä–æ–∫—Å–∏');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –±–µ–∑ –ø—Ä–æ–∫—Å–∏:', error.message);
  }
}

testProxy().catch(console.error);
