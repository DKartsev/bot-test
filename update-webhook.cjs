// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è webhook URL
const TelegramBot = require('node-telegram-bot-api');

require('dotenv').config();

async function updateWebhook() {
  console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ webhook URL...\n');

  const botToken = process.env.TG_BOT_TOKEN;
  const newWebhookUrl = process.env.PUBLIC_URL + process.env.TG_WEBHOOK_PATH + '/' + process.env.TG_WEBHOOK_SECRET;
  
  if (!botToken) {
    console.log('‚ùå TG_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    return;
  }

  console.log('üìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
  console.log(`   PUBLIC_URL: ${process.env.PUBLIC_URL}`);
  console.log(`   TG_WEBHOOK_PATH: ${process.env.TG_WEBHOOK_PATH}`);
  console.log(`   TG_WEBHOOK_SECRET: ${process.env.TG_WEBHOOK_SECRET}`);
  console.log(`   –ù–æ–≤—ã–π webhook URL: ${newWebhookUrl}`);

  try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    const bot = new TelegramBot(botToken, { polling: false });
    console.log('‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π webhook
    const currentWebhook = await bot.getWebHookInfo();
    console.log('\nüì° –¢–µ–∫—É—â–∏–π webhook:');
    console.log(`   URL: ${currentWebhook.url || '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    console.log(`   –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${currentWebhook.pending_update_count}`);

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
    console.log('\nüóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook...');
    const deleteResult = await bot.deleteWebHook();
    console.log('‚úÖ –°—Ç–∞—Ä—ã–π webhook —É–¥–∞–ª–µ–Ω');

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
    console.log('\nüîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook...');
    const setResult = await bot.setWebHook(newWebhookUrl);
    console.log('‚úÖ –ù–æ–≤—ã–π webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π webhook
    const newWebhook = await bot.getWebHookInfo();
    console.log('\nüì° –ù–æ–≤—ã–π webhook:');
    console.log(`   URL: ${newWebhook.url}`);
    console.log(`   –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${newWebhook.pending_update_count}`);

    console.log('\n‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ webhook:', error.message);
  }
}

updateWebhook().catch(console.error);
