#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç –ó–∞–ø—É—Å–∫ pre-commit –ø—Ä–æ–≤–µ—Ä–æ–∫..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–Ω—Ç–∏–Ω–≥
echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–∏–Ω–≥–∞..."
npm run lint
if [ $? -ne 0 ]; then
  echo "‚ùå –û—à–∏–±–∫–∏ –ª–∏–Ω—Ç–∏–Ω–≥–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º."
  echo "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'npm run lint:fix' –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
  exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º..."
npm run test:coverage
if [ $? -ne 0 ]; then
  echo "‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º."
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏..."
COVERAGE_FILE="./packages/backend/coverage/coverage-summary.json"

if [ -f "$COVERAGE_FILE" ]; then
  # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–∫—Ä—ã—Ç–∏–µ –∏–∑ JSON
  STATEMENTS=$(node -e "console.log(require('$COVERAGE_FILE').total.statements.pct)")
  BRANCHES=$(node -e "console.log(require('$COVERAGE_FILE').total.branches.pct)")
  FUNCTIONS=$(node -e "console.log(require('$COVERAGE_FILE').total.functions.pct)")
  LINES=$(node -e "console.log(require('$COVERAGE_FILE').total.lines.pct)")
  
  echo "üìà –¢–µ–∫—É—â–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:"
  echo "   Statements: ${STATEMENTS}%"
  echo "   Branches: ${BRANCHES}%"
  echo "   Functions: ${FUNCTIONS}%"
  echo "   Lines: ${LINES}%"
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
  STATEMENTS_NUM=$(echo $STATEMENTS | sed 's/%//')
  BRANCHES_NUM=$(echo $BRANCHES | sed 's/%//')
  FUNCTIONS_NUM=$(echo $FUNCTIONS | sed 's/%//')
  LINES_NUM=$(echo $LINES | sed 's/%//')
  
  if (( $(echo "$STATEMENTS_NUM < 80" | bc -l) )) || \
     (( $(echo "$BRANCHES_NUM < 80" | bc -l) )) || \
     (( $(echo "$FUNCTIONS_NUM < 80" | bc -l) )) || \
     (( $(echo "$LINES_NUM < 80" | bc -l) )); then
    echo "‚ö†Ô∏è  –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏ –Ω–∏–∂–µ 80%. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ª—É—á—à–∏—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ."
    echo "üí° –°–º. TEST_COVERAGE_PLAN.md –¥–ª—è –ø–ª–∞–Ω–∞ —É–ª—É—á—à–µ–Ω–∏—è."
  else
    echo "‚úÖ –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º (‚â•80%)"
  fi
else
  echo "‚ö†Ô∏è  –§–∞–π–ª –ø–æ–∫—Ä—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–µ—Å—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã —Å --coverage."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
echo "üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
if command -v prettier >/dev/null 2>&1; then
  npx prettier --check "packages/backend/src/**/*.{ts,tsx}"
  if [ $? -ne 0 ]; then
    echo "‚ùå –ö–æ–¥ –Ω–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'npx prettier --write' –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
    exit 1
  fi
  echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
  echo "‚ÑπÔ∏è  Prettier –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã TypeScript
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ TypeScript..."
cd packages/backend
npx tsc --noEmit
if [ $? -ne 0 ]; then
  echo "‚ùå –û—à–∏–±–∫–∏ —Ç–∏–ø–æ–≤ TypeScript. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º."
  exit 1
fi
cd ../..

echo "‚úÖ –í—Å–µ pre-commit –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
echo "üöÄ –ú–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å –∫–æ–º–º–∏—Ç!"
