#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–∞ VM
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/auto-deploy.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
VMIP=""
SSH_KEY_PATH=""
VM_USER="dankartsev"
PROJECT_PATH="~/bot-project"
WATCH_MODE=false
FORCE_DEPLOY=false

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –Ω–∞ VM"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
    echo ""
    echo "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    echo "  -i, --ip IP_ADDRESS     IP –∞–¥—Ä–µ—Å VM"
    echo "  -k, --key KEY_PATH      –ü—É—Ç—å –∫ SSH –∫–ª—é—á—É"
    echo ""
    echo "–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    echo "  -u, --user USER         –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å VM (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $VM_USER)"
    echo "  -p, --path PATH         –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –Ω–∞ VM (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $PROJECT_PATH)"
    echo "  -w, --watch             –†–µ–∂–∏–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    echo "  -f, --force             –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π"
    echo "  -h, --help              –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 -i 84.201.146.125 -k yandex-vm-key"
    echo "  $0 -i 84.201.146.125 -k yandex-vm-key -w"
    echo ""
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        -i|--ip)
            VMIP="$2"
            shift 2
            ;;
        -k|--key)
            SSH_KEY_PATH="$2"
            shift 2
            ;;
        -u|--user)
            VM_USER="$2"
            shift 2
            ;;
        -p|--path)
            PROJECT_PATH="$2"
            shift 2
            ;;
        -w|--watch)
            WATCH_MODE=true
            shift
            ;;
        -f|--force)
            FORCE_DEPLOY=true
            shift
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"
            show_help
            exit 1
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if [[ -z "$VMIP" || -z "$SSH_KEY_PATH" ]]; then
    echo "‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å IP –∞–¥—Ä–µ—Å VM –∏ –ø—É—Ç—å –∫ SSH –∫–ª—é—á—É"
    show_help
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${BLUE}üì° $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_step() {
    echo -e "${WHITE}$1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –Ω–∞ VM
execute_on_vm() {
    local command="$1"
    local description="$2"
    
    log_info "$description..."
    log_step "–ö–æ–º–∞–Ω–¥–∞: $command"
    
    if ssh -i "$SSH_KEY_PATH" "${VM_USER}@${VMIP}" "$command"; then
        log_success "$description –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        log_error "$description –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –Ω–∞ VM
copy_to_vm() {
    local source="$1"
    local destination="$2"
    
    log_info "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ $source –Ω–∞ VM..."
    
    if scp -i "$SSH_KEY_PATH" "$source" "${VM_USER}@${VMIP}:$destination"; then
        log_success "–§–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        log_error "–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–ø–ª–æ—è
deploy_to_vm() {
    log_info "–ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π..."
    
    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ dist
    if [[ ! -d "dist" ]]; then
        log_error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è dist –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞ —Å–Ω–∞—á–∞–ª–∞."
        return 1
    fi
    
    # –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è –¥–µ–ø–ª–æ—è..."
    local timestamp=$(date +"%Y%m%d-%H%M%S")
    local archive_name="deploy-${timestamp}.zip"
    
    if zip -r "$archive_name" dist > /dev/null; then
        log_success "–ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $archive_name"
    else
        log_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞"
        return 1
    fi
    
    # –®–∞–≥ 3: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –Ω–∞ VM
    if ! copy_to_vm "$archive_name" "$PROJECT_PATH/"; then
        rm -f "$archive_name"
        return 1
    fi
    
    # –®–∞–≥ 4: –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –Ω–∞ VM
    log_info "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞ –Ω–∞ VM..."
    local deploy_script="cd $PROJECT_PATH && rm -rf dist-old && if [ -d 'dist' ]; then mv dist dist-old; fi && unzip -o $archive_name && rm $archive_name"
    
    if ! execute_on_vm "$deploy_script" "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞"; then
        rm -f "$archive_name"
        return 1
    fi
    
    # –®–∞–≥ 5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    local install_script="cd $PROJECT_PATH/dist && npm ci --production"
    
    if ! execute_on_vm "$install_script" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"; then
        log_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
    fi
    
    # –®–∞–≥ 6: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    local restart_script="cd $PROJECT_PATH/dist && pm2 reload ecosystem.config.js || pm2 start ecosystem.config.js && pm2 save"
    
    if ! execute_on_vm "$restart_script" "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"; then
        log_warning "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–µ —É–¥–∞–ª—Å—è"
    fi
    
    # –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    local status=$(ssh -i "$SSH_KEY_PATH" "${VM_USER}@${VMIP}" "pm2 status" 2>/dev/null || true)
    if [[ -n "$status" ]]; then
        log_info "–°—Ç–∞—Ç—É—Å PM2:"
        echo "$status"
    fi
    
    # –®–∞–≥ 8: –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
    rm -f "$archive_name"
    log_success "–õ–æ–∫–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤ —É–¥–∞–ª–µ–Ω"
    
    log_success "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
watch_and_deploy() {
    log_info "–†–µ–∂–∏–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ inotify-tools
    if ! command -v inotifywait &> /dev/null; then
        log_warning "inotifywait –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ inotify-tools –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π."
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞: sudo apt-get install inotify-tools"
        return 1
    fi
    
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    inotifywait -m -r -e modify,create,delete,move . --exclude '\.(tmp|log|zip|tar\.gz)$|node_modules|dist|\.git' | while read -r directory events filename; do
        local timestamp=$(date +"%H:%M:%S")
        echo -e "[$timestamp] ${YELLOW}–ò–∑–º–µ–Ω–µ–Ω–∏–µ: $directory$filename${NC}"
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å
        sleep 2
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π
        log_info "–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è..."
        deploy_to_vm
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    echo -e "${GREEN}üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –Ω–∞ VM $VMIP${NC}"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∫–ª—é—á–∞
    if [[ ! -f "$SSH_KEY_PATH" ]]; then
        log_error "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSH_KEY_PATH"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –¥–ª—è SSH –∫–ª—é—á–∞
    chmod 600 "$SSH_KEY_PATH"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VM
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VM..."
    if ! execute_on_vm "echo 'Connection OK'" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"; then
        log_error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VM. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ IP –∞–¥—Ä–µ—Å –∏ SSH –∫–ª—é—á."
        exit 1
    fi
    
    log_success "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VM —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    
    if [[ "$WATCH_MODE" == true ]]; then
        # –†–µ–∂–∏–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        watch_and_deploy
    else
        # –û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –¥–µ–ø–ª–æ–π
        deploy_to_vm
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'echo -e "\n${YELLOW}–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...${NC}"; exit 0' INT TERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
