# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–∞ VM –Ø–Ω–¥–µ–∫—Å.–û–±–ª–∞–∫–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\scripts\deploy-vm.ps1 -VMIP <VM_IP> -SSHKeyPath <SSH_KEY_PATH>

param(
    [Parameter(Mandatory=$true)]
    [string]$VMIP,
    
    [Parameter(Mandatory=$true)]
    [string]$SSHKeyPath
)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è SSH –∫–ª—é—á–∞
if (-not (Test-Path $SSHKeyPath)) {
    Write-Host "–û—à–∏–±–∫–∞: SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSHKeyPath" -ForegroundColor Red
    exit 1
}

$RemoteUser = "ubuntu"
$RemoteDir = "/opt/bot-support-system"

Write-Host "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ VM $VMIP" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VM
Write-Host "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VM..." -ForegroundColor Yellow
try {
    $testConnection = ssh -i $SSHKeyPath -o ConnectTimeout=10 -o StrictHostKeyChecking=no "${RemoteUser}@${VMIP}" "echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'" 2>$null
    if ($LASTEXITCODE -ne 0) {
        throw "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VM"
    }
} catch {
    Write-Host "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VM" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VM —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ" -ForegroundColor Green

# –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "–°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..." -ForegroundColor Yellow
npm run build
if ($LASTEXITCODE -ne 0) {
    Write-Host "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –ø—Ä–æ–µ–∫—Ç–∞" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω" -ForegroundColor Green

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è –¥–µ–ø–ª–æ—è
Write-Host "–°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –¥–ª—è –¥–µ–ø–ª–æ—è..." -ForegroundColor Yellow
$DeployArchive = "deploy-$(Get-Date -Format 'yyyyMMdd-HHmmss').tar.gz"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–µ–ø–ª–æ—è
$TempDir = New-TemporaryFile | ForEach-Object { Remove-Item $_; New-Item -ItemType Directory -Path $_ }
Copy-Item -Recurse dist $TempDir
Copy-Item -Recurse packages/operator-admin/.next $TempDir/admin-next
Copy-Item -Recurse packages/operator-admin/public $TempDir/admin-public
Copy-Item packages/operator-admin/next.config.js $TempDir
Copy-Item packages/operator-admin/package.json $TempDir/admin-package.json
Copy-Item package.json $TempDir
Copy-Item ecosystem.config.js $TempDir
Copy-Item docker-compose.yml $TempDir
Copy-Item -Recurse nginx $TempDir
Copy-Item env-template.txt $TempDir/.env.example

# –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ (—Ç—Ä–µ–±—É–µ—Ç—Å—è 7-Zip –∏–ª–∏ tar)
if (Get-Command tar -ErrorAction SilentlyContinue) {
    tar -czf $DeployArchive -C $TempDir .
} elseif (Get-Command 7z -ErrorAction SilentlyContinue) {
    7z a -ttar $DeployArchive "$TempDir\*"
    7z a -tgzip "$DeployArchive.gz" $DeployArchive
    Remove-Item $DeployArchive
    $DeployArchive = "$DeployArchive.gz"
} else {
    Write-Host "–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω tar –∏–ª–∏ 7-Zip –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞" -ForegroundColor Red
    exit 1
}

Remove-Item -Recurse -Force $TempDir

Write-Host "‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $DeployArchive" -ForegroundColor Green

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –Ω–∞ VM
Write-Host "–ö–æ–ø–∏—Ä—É–µ–º –∞—Ä—Ö–∏–≤ –Ω–∞ VM..." -ForegroundColor Yellow
scp -i $SSHKeyPath -o StrictHostKeyChecking=no $DeployArchive "${RemoteUser}@${VMIP}:/tmp/"

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –Ω–∞ VM
Write-Host "–í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ VM..." -ForegroundColor Yellow
$deployScript = @"
set -e

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sudo mkdir -p /opt/bot-support-system
sudo chown \$USER:\$USER /opt/bot-support-system

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd /opt/bot-support-system

# –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞
tar -xzf "/tmp/$(Split-Path $DeployArchive -Leaf)"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm ci --only=production

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è admin
cd admin-next
npm ci --only=production
cd ..

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p logs data uploads

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
sudo chown -R \$USER:\$USER /opt/bot-support-system

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è PM2
sudo tee /etc/systemd/system/bot-support.service > /dev/null << 'SERVICE_EOF'
[Unit]
Description=Bot Support System
After=network.target

[Service]
Type=forking
User=ubuntu
WorkingDirectory=/opt/bot-support-system
ExecStart=/usr/bin/pm2 start ecosystem.config.js
ExecReload=/usr/bin/pm2 reload ecosystem.config.js
ExecStop=/usr/bin/pm2 stop ecosystem.config.js
Restart=on-failure
RestartSec=10

[Install]
WantedBy=multi-user.target
SERVICE_EOF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
sudo systemctl daemon-reload
sudo systemctl enable bot-support.service

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ PM2
if ! command -v pm2 &> /dev/null; then
    npm install -g pm2
fi

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
pm2 start ecosystem.config.js
pm2 save
pm2 startup

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
"@

$deployScript | ssh -i $SSHKeyPath -o StrictHostKeyChecking=no "${RemoteUser}@${VMIP}"

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
Remove-Item $DeployArchive

Write-Host "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
Write-Host "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://$VMIP" -ForegroundColor Yellow
Write-Host "Admin –ø–∞–Ω–µ–ª—å: http://${VMIP}:3001" -ForegroundColor Yellow
Write-Host "API: http://${VMIP}:3000/api" -ForegroundColor Yellow
Write-Host ""
Write-Host "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Green
Write-Host "  SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ssh -i $SSHKeyPath $RemoteUser@$VMIP" -ForegroundColor White
Write-Host "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: ssh -i $SSHKeyPath $RemoteUser@$VMIP 'pm2 logs'" -ForegroundColor White
Write-Host "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: ssh -i $SSHKeyPath $RemoteUser@$VMIP 'pm2 restart all'" -ForegroundColor White
Write-Host "  –°—Ç–∞—Ç—É—Å: ssh -i $SSHKeyPath $RemoteUser@$VMIP 'pm2 status'" -ForegroundColor White
