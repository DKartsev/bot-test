# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å VM
# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω—ã–º –ü–ö –∏ VM

param(
    [string]$Action = "sync", # sync, pull, push, status
    [string]$VMUser = "dankartsev",
    [string]$VMIP = "84.201.146.125",
    [string]$VMProjectPath = "~/bot-project"
)

Write-Host "üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å VM..." -ForegroundColor Green
Write-Host "VM: ${VMUser}@${VMIP}:${VMProjectPath}" -ForegroundColor Blue

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SSH –∫–æ–º–∞–Ω–¥
function Invoke-SSHCommand {
    param([string]$Command)
    try {
        $result = ssh -l $VMUser $VMIP $Command 2>&1
        return $result
    } catch {
        Write-Host "‚ùå SSH –æ—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
        return $null
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –Ω–∞ VM
function Copy-ToVM {
    param([string]$LocalPath, [string]$RemotePath)
    try {
        Write-Host "üì§ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ $LocalPath –Ω–∞ VM..." -ForegroundColor Yellow
        scp -r $LocalPath "${VMUser}@${VMIP}:${RemotePath}"
        Write-Host "‚úÖ –§–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å VM
function Copy-FromVM {
    param([string]$RemotePath, [string]$LocalPath)
    try {
        Write-Host "üì• –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ $RemotePath —Å VM..." -ForegroundColor Yellow
        scp -r "${VMUser}@${VMIP}:${RemotePath}" $LocalPath
        Write-Host "‚úÖ –§–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: $($_.Exception.Message)" -ForegroundColor Red
    }
}

switch ($Action.ToLower()) {
    "sync" {
        Write-Host "üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é..." -ForegroundColor Green
        
        # 1. –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ü–ö –Ω–∞ VM
        Write-Host "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ VM..." -ForegroundColor Blue
        
        # –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
        $filesToSync = @(
            "src",
            "packages", 
            "scripts",
            "package.json",
            "tsconfig.json",
            "env-template.txt"
        )
        
        foreach ($file in $filesToSync) {
            if (Test-Path $file) {
                Copy-ToVM $file $VMProjectPath
            }
        }
        
        # 2. –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å VM –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π –ü–ö
        Write-Host "üì• –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å VM..." -ForegroundColor Blue
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –Ω–∞ VM
        $vmFilesToSync = @(
            "dist/admin",
            "dist/app",
            "dist/admin-server.cjs",
            "dist/ecosystem.config.cjs",
            "dist/.env"
        )
        
        foreach ($file in $vmFilesToSync) {
            Copy-FromVM "$VMProjectPath/$file" "vm-changes/"
        }
        
        Write-Host "‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
    }
    
    "push" {
        Write-Host "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ VM..." -ForegroundColor Blue
        
        # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
        $timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
        $archiveName = "sync-$timestamp.zip"
        
        Write-Host "üì¶ –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤: $archiveName" -ForegroundColor Yellow
        Compress-Archive -Path "src", "packages", "scripts", "package.json", "tsconfig.json" -DestinationPath $archiveName -Force
        
        # –ö–æ–ø–∏—Ä—É–µ–º –∞—Ä—Ö–∏–≤ –Ω–∞ VM
        Copy-ToVM $archiveName $VMProjectPath
        
        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–∞ VM
        Write-Host "üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–∞ VM..." -ForegroundColor Yellow
        Invoke-SSHCommand "cd $VMProjectPath ; unzip -o $archiveName ; rm $archiveName"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Yellow
        Invoke-SSHCommand "cd $VMProjectPath ; npm install"
        
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
        Write-Host "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..." -ForegroundColor Yellow
        Invoke-SSHCommand "pm2 restart all"
        
        # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤
        Remove-Item $archiveName -Force
        
        Write-Host "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ VM!" -ForegroundColor Green
    }
    
    "pull" {
        Write-Host "üì• –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å VM..." -ForegroundColor Blue
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å VM
        if (-not (Test-Path "vm-changes")) {
            New-Item -ItemType Directory -Name "vm-changes" -Force
        }
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã —Å VM
        Copy-FromVM "$VMProjectPath/dist" "vm-changes/"
        Copy-FromVM "$VMProjectPath/.env" "vm-changes/"
        Copy-FromVM "$VMProjectPath/ecosystem.config.cjs" "vm-changes/"
        
        Write-Host "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã —Å VM!" -ForegroundColor Green
        Write-Host "üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ vm-changes/" -ForegroundColor Blue
    }
    
    "status" {
        Write-Host "üìä –°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..." -ForegroundColor Blue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Git
        Write-Host "üîç –õ–æ–∫–∞–ª—å–Ω—ã–π Git —Å—Ç–∞—Ç—É—Å:" -ForegroundColor Yellow
        git status --porcelain
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ VM
        Write-Host "üîç VM —Å—Ç–∞—Ç—É—Å:" -ForegroundColor Yellow
        Invoke-SSHCommand "cd $VMProjectPath ; git status --porcelain 2>/dev/null ; if [ $? -ne 0 ]; then echo 'Git –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω'; fi"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å PM2
        Write-Host "üîç PM2 —Å—Ç–∞—Ç—É—Å:" -ForegroundColor Yellow
        Invoke-SSHCommand "pm2 status 2>/dev/null ; if [ $? -ne 0 ]; then echo 'PM2 –Ω–µ –∑–∞–ø—É—â–µ–Ω'; fi"
    }
    
    default {
        Write-Host "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: $Action" -ForegroundColor Red
        Write-Host "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è: sync, push, pull, status" -ForegroundColor Yellow
    }
}

Write-Host "üéØ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
