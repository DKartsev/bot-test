# PowerShell —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ VM
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\scripts\check-deploy-readiness.ps1

param(
    [switch]$Verbose
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Red = "Red"
$Green = "Green"
$Yellow = "Yellow"
$Blue = "Blue"
$White = "White"

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ VM..." -ForegroundColor $Blue
Write-Host ""

# –°—á–µ—Ç—á–∏–∫–∏
$TotalChecks = 0
$PassedChecks = 0
$FailedChecks = 0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
function Test-Item {
    param(
        [string]$Description,
        [scriptblock]$CheckCommand,
        [string]$SuccessMessage,
        [string]$FailureMessage
    )
    
    $script:TotalChecks++
    
    try {
        $result = & $CheckCommand
        if ($result) {
            Write-Host "‚úÖ $Description" -ForegroundColor $Green
            $script:PassedChecks++
            if ($SuccessMessage) {
                Write-Host "   $SuccessMessage" -ForegroundColor $Blue
            }
        } else {
            Write-Host "‚ùå $Description" -ForegroundColor $Red
            $script:FailedChecks++
            if ($FailureMessage) {
                Write-Host "   $FailureMessage" -ForegroundColor $Yellow
            }
        }
    } catch {
        Write-Host "‚ùå $Description" -ForegroundColor $Red
        $script:FailedChecks++
        if ($FailureMessage) {
            Write-Host "   $FailureMessage" -ForegroundColor $Yellow
        }
    }
    Write-Host ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:" -ForegroundColor $Blue

Test-Item \
    "–ö–æ—Ä–Ω–µ–≤–æ–π package.json" \
    { Test-Path "package.json" } \
    "–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞–π–¥–µ–Ω" \
    "–°–æ–∑–¥–∞–π—Ç–µ package.json –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞"

Test-Item \
    "Backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è" \
    { Test-Path "packages\backend" } \
    "Backend –∫–æ–¥ –Ω–∞–π–¥–µ–Ω" \
    "–°–æ–∑–¥–∞–π—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é packages\backend"

Test-Item \
    "Admin –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è" \
    { Test-Path "packages\operator-admin" } \
    "Admin –ø–∞–Ω–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞" \
    "–°–æ–∑–¥–∞–π—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é packages\operator-admin"

Test-Item \
    "Shared –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è" \
    { Test-Path "packages\shared" } \
    "–û–±—â–∏–µ —Ç–∏–ø—ã –Ω–∞–π–¥–µ–Ω—ã" \
    "–°–æ–∑–¥–∞–π—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é packages\shared"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
Write-Host "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:" -ForegroundColor $Blue

Test-Item \
    "PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è" \
    { Test-Path "ecosystem.config.js" } \
    "PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞" \
    "–°–æ–∑–¥–∞–π—Ç–µ ecosystem.config.js"

Test-Item \
    "Docker Compose" \
    { Test-Path "docker-compose.yml" } \
    "Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞" \
    "–°–æ–∑–¥–∞–π—Ç–µ docker-compose.yml"

Test-Item \
    "TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è" \
    { Test-Path "tsconfig.json" } \
    "TypeScript –Ω–∞—Å—Ç—Ä–æ–µ–Ω" \
    "–°–æ–∑–¥–∞–π—Ç–µ tsconfig.json"

Test-Item \
    "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è" \
    { Test-Path "env-template.txt" } \
    "–®–∞–±–ª–æ–Ω –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≥–æ—Ç–æ–≤" \
    "–°–æ–∑–¥–∞–π—Ç–µ env-template.txt"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
Write-Host "üìú –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤:" -ForegroundColor $Blue

Test-Item \
    "–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è (Linux)" \
    { Test-Path "scripts\deploy-vm.sh" } \
    "–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –¥–ª—è Linux –≥–æ—Ç–æ–≤" \
    "–°–æ–∑–¥–∞–π—Ç–µ scripts\deploy-vm.sh"

Test-Item \
    "–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è (Windows)" \
    { Test-Path "scripts\deploy-vm.ps1" } \
    "–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –¥–ª—è Windows –≥–æ—Ç–æ–≤" \
    "–°–æ–∑–¥–∞–π—Ç–µ scripts\deploy-vm.ps1"

Test-Item \
    "–°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ (Linux)" \
    { Test-Path "scripts\clean-project.sh" } \
    "–°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –¥–ª—è Linux –≥–æ—Ç–æ–≤" \
    "–°–æ–∑–¥–∞–π—Ç–µ scripts\clean-project.sh"

Test-Item \
    "–°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ (Windows)" \
    { Test-Path "scripts\clean-project.ps1" } \
    "–°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –¥–ª—è Windows –≥–æ—Ç–æ–≤" \
    "–°–æ–∑–¥–∞–π—Ç–µ scripts\clean-project.ps1"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
Write-Host "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:" -ForegroundColor $Blue

Test-Item \
    "Nginx –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è" \
    { Test-Path "nginx" } \
    "Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞" \
    "–°–æ–∑–¥–∞–π—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é nginx"

Test-Item \
    "Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è" \
    { Test-Path "nginx\nginx.conf" } \
    "Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞" \
    "–°–æ–∑–¥–∞–π—Ç–µ nginx\nginx.conf"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Ñ–∞–π–ª–æ–≤
Write-Host "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Ñ–∞–π–ª–æ–≤:" -ForegroundColor $Blue

Test-Item \
    "Dockerfile –¥–ª—è backend" \
    { Test-Path "Dockerfile.backend" } \
    "Dockerfile –¥–ª—è backend –≥–æ—Ç–æ–≤" \
    "–°–æ–∑–¥–∞–π—Ç–µ Dockerfile.backend"

Test-Item \
    "Dockerfile –¥–ª—è admin" \
    { Test-Path "packages\operator-admin\Dockerfile.admin" } \
    "Dockerfile –¥–ª—è admin –≥–æ—Ç–æ–≤" \
    "–°–æ–∑–¥–∞–π—Ç–µ packages\operator-admin\Dockerfile.admin"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Write-Host "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:" -ForegroundColor $Blue

Test-Item \
    "–ö–æ—Ä–Ω–µ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏" \
    { (Get-Content "package.json" | Select-String "pm2") -ne $null } \
    "PM2 –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏" \
    "–î–æ–±–∞–≤—å—Ç–µ pm2 –≤ package.json"

Test-Item \
    "Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏" \
    { (Get-Content "packages\backend\package.json" | Select-String "fastify") -ne $null } \
    "Fastify –Ω–∞–π–¥–µ–Ω –≤ backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö" \
    "–î–æ–±–∞–≤—å—Ç–µ fastify –≤ packages\backend\package.json"

Test-Item \
    "Admin –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏" \
    { (Get-Content "packages\operator-admin\package.json" | Select-String "next") -ne $null } \
    "Next.js –Ω–∞–π–¥–µ–Ω –≤ admin –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö" \
    "–î–æ–±–∞–≤—å—Ç–µ next –≤ packages\operator-admin\package.json"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
Write-Host "üíª –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞:" -ForegroundColor $Blue

Test-Item \
    "Backend main.ts" \
    { Test-Path "packages\backend\src\main.ts" } \
    "Backend —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–∞" \
    "–°–æ–∑–¥–∞–π—Ç–µ packages\backend\src\main.ts"

Test-Item \
    "Admin —Å—Ç—Ä–∞–Ω–∏—Ü–∞" \
    { Test-Path "packages\operator-admin\src\app\page.tsx" } \
    "Admin –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞" \
    "–°–æ–∑–¥–∞–π—Ç–µ packages\operator-admin\src\app\page.tsx"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
Write-Host "üìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:" -ForegroundColor $Blue

Test-Item \
    "README –¥–ª—è –¥–µ–ø–ª–æ—è" \
    { Test-Path "README-VM-DEPLOY.md" } \
    "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –¥–µ–ø–ª–æ—é –≥–æ—Ç–æ–≤–∞" \
    "–°–æ–∑–¥–∞–π—Ç–µ README-VM-DEPLOY.md"

Test-Item \
    "–û—Å–Ω–æ–≤–Ω–æ–π README" \
    { Test-Path "README.md" } \
    "–û—Å–Ω–æ–≤–Ω–æ–π README –≥–æ—Ç–æ–≤" \
    "–°–æ–∑–¥–∞–π—Ç–µ README.md"

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
Write-Host "üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:" -ForegroundColor $Blue
Write-Host "‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: $PassedChecks" -ForegroundColor $Green
Write-Host "‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $FailedChecks" -ForegroundColor $Red
Write-Host "üìã –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: $TotalChecks" -ForegroundColor $Blue

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
Write-Host ""
if ($FailedChecks -eq 0) {
    Write-Host "üéâ –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ VM!" -ForegroundColor $Green
    Write-Host ""
    Write-Host "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor $Blue
    Write-Host "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: Copy-Item env-template.txt .env" -ForegroundColor $White
    Write-Host "2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install" -ForegroundColor $White
    Write-Host "3. –°–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: npm run build" -ForegroundColor $White
    Write-Host "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π: .\scripts\deploy-vm.ps1 -VMIP <VM_IP> -SSHKeyPath <SSH_KEY_PATH>" -ForegroundColor $White
} else {
    Write-Host "‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º" -ForegroundColor $Yellow
    Write-Host ""
    Write-Host "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:" -ForegroundColor $Blue
    Write-Host "1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—Å–µ –ø—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏" -ForegroundColor $White
    Write-Host "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏: .\scripts\clean-project.ps1" -ForegroundColor $White
    Write-Host "3. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É: .\scripts\check-deploy-readiness.ps1" -ForegroundColor $White
    Write-Host "4. –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π" -ForegroundColor $White
}

Write-Host ""
Write-Host "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ README-VM-DEPLOY.md" -ForegroundColor $Blue

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
if ($FailedChecks -gt 0) {
    exit 1
}
