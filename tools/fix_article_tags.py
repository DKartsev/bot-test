#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–≥–æ–≤ –≤ —Å—Ç–∞—Ç—å—è—Ö –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
"""

import psycopg2
import sys
import json
import re

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Supabase
DB_CONFIG = {
    'host': 'aws-0-eu-north-1.pooler.supabase.com',
    'port': 5432,
    'database': 'postgres',
    'user': 'postgres.ymfduihrjjuzwuckbjjh',
    'password': 'mn4c0Je402fgh3mc5'
}

def fix_article_tags():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–≥–∏ –≤ —Å—Ç–∞—Ç—å—è—Ö –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π"""
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = psycopg2.connect(**DB_CONFIG)
        cursor = conn.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏
        cursor.execute("""
            SELECT id, title, slug, tags 
            FROM kb_articles 
            ORDER BY title
        """)
        articles = cursor.fetchall()
        
        print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π")
        
        fixed_count = 0
        updated_count = 0
        
        for article in articles:
            article_id, title, slug, tags = article
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ç–µ–≥–∏
            current_tags = []
            needs_fix = False
            
            if tags:
                try:
                    # –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON
                    if isinstance(tags, str):
                        current_tags = json.loads(tags)
                    else:
                        current_tags = tags
                except (json.JSONDecodeError, TypeError):
                    # –ï—Å–ª–∏ –Ω–µ JSON, –ø—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —Ç–µ–≥–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞
                    needs_fix = True
                    print(f"  ‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–µ–≥–∞–º–∏ –≤ —Å—Ç–∞—Ç—å–µ '{title}'")
            
            # –ï—Å–ª–∏ —Ç–µ–≥–æ–≤ –Ω–µ—Ç –∏–ª–∏ –æ–Ω–∏ –ø—É—Å—Ç—ã–µ, –¥–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–µ–≥–∏
            if not current_tags or current_tags == [] or current_tags == ['']:
                needs_fix = True
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ slug
                base_tags = ['–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è']
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
                title_lower = title.lower()
                if any(word in title_lower for word in ['–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', '—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ', '–≥–∞–π–¥']):
                    base_tags.append('–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
                if any(word in title_lower for word in ['–Ω–∞—Å—Ç—Ä–æ–π–∫–∞', '–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è', '—É—Å—Ç–∞–Ω–æ–≤–∫–∞']):
                    base_tags.append('–Ω–∞—Å—Ç—Ä–æ–π–∫–∞')
                if any(word in title_lower for word in ['–æ—à–∏–±–∫–∞', '–ø—Ä–æ–±–ª–µ–º–∞', '—Ä–µ—à–µ–Ω–∏–µ']):
                    base_tags.append('—É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ-–Ω–µ–ø–æ–ª–∞–¥–æ–∫')
                if any(word in title_lower for word in ['api', '–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ']):
                    base_tags.append('api')
                if any(word in title_lower for word in ['–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–∑–∞—â–∏—Ç–∞', '–¥–æ—Å—Ç—É–ø']):
                    base_tags.append('–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å')
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ slug
                if 'bot' in slug.lower():
                    base_tags.append('–±–æ—Ç')
                if 'admin' in slug.lower():
                    base_tags.append('–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ')
                if 'user' in slug.lower():
                    base_tags.append('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                
                current_tags = base_tags
                print(f"  üìù –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ–≥–∏ –¥–ª—è '{title}': {current_tags}")
            
            if needs_fix:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–≥–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                cursor.execute("""
                    UPDATE kb_articles 
                    SET tags = %s 
                    WHERE id = %s
                """, (json.dumps(current_tags), article_id))
                updated_count += 1
            
            fixed_count += 1
        
        # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print(f"\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"  - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: {fixed_count}")
        print(f"  - –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {updated_count}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–≥–æ–≤ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
        try:
            cursor.execute("""
                SELECT tags, COUNT(*) as count
                FROM kb_articles 
                WHERE tags IS NOT NULL AND tags != '[]' AND tags != 'null' AND tags != '""'
                GROUP BY tags 
                ORDER BY count DESC 
                LIMIT 10
            """)
            tag_stats = cursor.fetchall()
        except Exception as e:
            print(f"    ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ–≥–æ–≤: {e}")
            tag_stats = []
        
        print(f"\nüìä –¢–æ–ø —Ç–µ–≥–æ–≤:")
        for tags, count in tag_stats:
            try:
                tag_list = json.loads(tags) if isinstance(tags, str) else tags
                print(f"  - {tag_list}: {count} —Å—Ç–∞—Ç–µ–π")
            except:
                print(f"  - {tags}: {count} —Å—Ç–∞—Ç–µ–π")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        if 'conn' in locals():
            conn.rollback()
        sys.exit(1)
    finally:
        if 'conn' in locals():
            cursor.close()
            conn.close()
            print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Supabase –∑–∞–∫—Ä—ã—Ç–æ")

if __name__ == "__main__":
    fix_article_tags()
