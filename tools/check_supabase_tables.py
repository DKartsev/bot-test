#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü –≤ Supabase
"""

import psycopg2
import sys

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Supabase
DB_CONFIG = {
    'host': 'aws-0-eu-north-1.pooler.supabase.com',
    'port': 5432,
    'database': 'postgres',
    'user': 'postgres.ymfduihrjjuzwuckbjjh',
    'password': 'mn4c0Je402fgh3mc5'
}

def check_tables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –≤ Supabase"""
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = psycopg2.connect(**DB_CONFIG)
        cursor = conn.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public' 
            ORDER BY table_name
        """)
        tables = cursor.fetchall()
        
        print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ {len(tables)} —Ç–∞–±–ª–∏—Ü –≤ Supabase:")
        for table in tables:
            print(f"  - {table[0]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–µ–º—É support
        cursor.execute("""
            SELECT schema_name 
            FROM information_schema.schemata 
            WHERE schema_name = 'support'
        """)
        support_schema = cursor.fetchone()
        
        if support_schema:
            print(f"\nüìã –°—Ö–µ–º–∞ 'support' –Ω–∞–π–¥–µ–Ω–∞")
            cursor.execute("""
                SELECT table_name 
                FROM information_schema.tables 
                WHERE table_schema = 'support' 
                ORDER BY table_name
            """)
            support_tables = cursor.fetchall()
            print(f"  –¢–∞–±–ª–∏—Ü –≤ —Å—Ö–µ–º–µ support: {len(support_tables)}")
            for table in support_tables:
                print(f"    - {table[0]}")
        else:
            print(f"\n‚ùå –°—Ö–µ–º–∞ 'support' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        cursor.execute("""
            SELECT extname 
            FROM pg_extension 
            ORDER BY extname
        """)
        extensions = cursor.fetchall()
        print(f"\nüîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è:")
        for ext in extensions:
            print(f"  - {ext[0]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º pgvector
        cursor.execute("""
            SELECT extname 
            FROM pg_extension 
            WHERE extname = 'vector'
        """)
        vector_ext = cursor.fetchone()
        if vector_ext:
            print(f"  ‚úÖ pgvector —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"  ‚ùå pgvector –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        conn.close()
        print(f"\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Supabase –∑–∞–∫—Ä—ã—Ç–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    check_tables()
