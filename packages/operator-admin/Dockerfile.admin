# Base stage для общих зависимостей
FROM node:20-alpine AS base

WORKDIR /app

# System deps for building native modules (node-gyp)
RUN apk add --no-cache python3 build-base

# Копируем package.json файлы
COPY package*.json ./
COPY packages/operator-admin/package*.json ./packages/operator-admin/
COPY packages/shared/package*.json ./packages/shared/

# Устанавливаем зависимости
RUN npm install

# Development stage
FROM base AS development

# Копируем исходный код
COPY packages/operator-admin ./packages/operator-admin
COPY packages/shared ./packages/shared
COPY tsconfig*.json ./

# Устанавливаем dev зависимости
RUN npm install

# Создаем пользователя для безопасности
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

USER nodejs

EXPOSE 3000

# Запускаем в режиме разработки с hot reload
CMD ["npm", "run", "dev", "-w", "packages/operator-admin"]

# Builder stage для production
FROM base AS builder

# Копируем исходный код
COPY packages/operator-admin ./packages/operator-admin
COPY packages/shared ./packages/shared
COPY tsconfig*.json ./

# Собираем проект
RUN npm run build:admin

# Production stage
FROM nginx:alpine AS production

# Копируем собранные файлы
COPY --from=builder /app/packages/operator-admin/out /usr/share/nginx/html

# Копируем nginx конфигурацию
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 3000

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

CMD ["nginx", "-g", "daemon off;"]
