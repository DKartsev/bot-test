# Base stage для общих зависимостей
FROM node:18-alpine AS base

WORKDIR /app

# Копируем package.json файлы
COPY package*.json ./
COPY packages/backend/package*.json ./packages/backend/
COPY packages/shared/package*.json ./packages/shared/

# Устанавливаем зависимости
RUN npm ci

# Development stage
FROM base AS development

# Копируем исходный код
COPY packages/backend ./packages/backend
COPY packages/shared ./packages/shared
COPY tsconfig*.json ./

# Устанавливаем dev зависимости
RUN npm install

# Создаем пользователя для безопасности
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Создаем директории для логов и данных
RUN mkdir -p logs data && chown -R nodejs:nodejs logs data

USER nodejs

EXPOSE 3000

# Запускаем в режиме разработки с hot reload
CMD ["npm", "run", "dev:backend", "-w", "packages/backend"]

# Builder stage для production
FROM base AS builder

# Копируем исходный код
COPY packages/backend ./packages/backend
COPY packages/shared ./packages/shared
COPY tsconfig*.json ./

# Собираем проект
RUN npm run build:backend

# Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Устанавливаем только production зависимости
COPY package*.json ./
RUN npm ci --only=production

# Копируем собранный код
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/packages/shared ./packages/shared

# Создаем пользователя для безопасности
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Создаем директории для логов и данных
RUN mkdir -p logs data && chown -R nodejs:nodejs logs data

USER nodejs

EXPOSE 3000

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

CMD ["node", "dist/main.js"]
