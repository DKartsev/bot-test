version: '3.8'

services:
  # Redis для кэширования
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - bot-network

  # Backend сервис
  bot-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - ADMIN_API_TOKENS=${ADMIN_API_TOKENS}
      - DB_SSL=true
    env_file:
      - .env
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Admin панель
  bot-admin:
    build:
      context: .
      dockerfile: packages/operator-admin/Dockerfile.admin
      target: ${BUILD_TARGET:-production}
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
        - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
        - NEXT_PUBLIC_BASE_PATH=${NEXT_PUBLIC_BASE_PATH}
        - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    ports:
      - "${ADMIN_PORT:-3001}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
      - NEXT_PUBLIC_BASE_PATH=${NEXT_PUBLIC_BASE_PATH}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    env_file:
      - .env
    depends_on:
      - bot-backend
    restart: unless-stopped
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  bot-network:
    driver: bridge

volumes:
  redis_data:
