# Минимальный Dockerfile для admin панели
FROM node:20-alpine AS base

# Устанавливаем только необходимые системные зависимости
RUN apk add --no-cache python3 build-base

# Создаем пользователя для безопасности
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /app

# Копируем только package.json файлы
COPY package.json ./
COPY packages/operator-admin/package.json ./packages/operator-admin/
COPY packages/shared/package.json ./packages/shared/

# Устанавливаем зависимости
RUN npm ci --only=production --omit=dev

# Development stage
FROM base AS development

# Устанавливаем dev зависимости
RUN npm ci

# Копируем только необходимые файлы
COPY packages/operator-admin/src ./packages/operator-admin/src
COPY packages/operator-admin/public ./packages/operator-admin/public
COPY packages/operator-admin/tsconfig.json ./packages/operator-admin/
COPY packages/operator-admin/next.config.js ./packages/operator-admin/
COPY packages/operator-admin/tailwind.config.js ./packages/operator-admin/
COPY packages/operator-admin/postcss.config.js ./packages/operator-admin/
COPY packages/shared/src ./packages/shared/src
COPY packages/shared/tsconfig.json ./packages/shared/
COPY tsconfig*.json ./

# Создаем необходимые директории
RUN mkdir -p logs && \
    chown -R nodejs:nodejs logs

USER nodejs

WORKDIR /app/packages/operator-admin

EXPOSE 3000

# Запускаем в режиме разработки
CMD ["npm", "run", "dev"]

# Production stage
FROM base AS production

# Устанавливаем dev зависимости для сборки
RUN npm ci

# Копируем исходный код
COPY packages/operator-admin/src ./packages/operator-admin/src
COPY packages/operator-admin/public ./packages/operator-admin/public
COPY packages/operator-admin/tsconfig.json ./packages/operator-admin/
COPY packages/operator-admin/next.config.js ./packages/operator-admin/
COPY packages/operator-admin/tailwind.config.js ./packages/operator-admin/
COPY packages/operator-admin/postcss.config.js ./packages/operator-admin/
COPY packages/shared/src ./packages/shared/src
COPY packages/shared/tsconfig.json ./packages/shared/
COPY tsconfig*.json ./

# Собираем приложение
RUN npm run build -w packages/operator-admin

# Создаем необходимые директории
RUN mkdir -p logs && \
    chown -R nodejs:nodejs logs

USER nodejs

WORKDIR /app/packages/operator-admin

EXPOSE 3000

# Запускаем в продакшн режиме
CMD ["npm", "run", "start"]
